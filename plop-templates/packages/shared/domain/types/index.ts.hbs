import {z} from 'zod';

// Create
export const create{{pascalCase name}}ParamsSchema = z.object({})
export type Create{{pascalCase name}}Params = z.infer<typeof create{{pascalCase name}}ParamsSchema>

export const create{{pascalCase name}}ReturnValueSchema = z.object({})
export type Create{{pascalCase name}}ReturnValue = z.infer<typeof create{{pascalCase name}}ReturnValueSchema>

export const bulkCreate{{pascalCase name}}ParamsSchema = z.array(create{{pascalCase name}}ParamsSchema)
export type BulkCreate{{pascalCase name}}Params = z.infer<typeof bulkCreate{{pascalCase name}}ParamsSchema>

export const bulkCreate{{pascalCase name}}ReturnValueSchema = z.array(create{{pascalCase name}}ReturnValueSchema)
export type BulkCreate{{pascalCase name}}ReturnValue = z.infer<typeof bulkCreate{{pascalCase name}}ReturnValueSchema>

// Read

export const read{{pascalCase name}}sParamsSchema = z.object({})
export type Read{{pascalCase name}}sParams = z.infer<typeof read{{pascalCase name}}sParamsSchema>

export const read{{pascalCase name}}ParamsSchema = z.object({})
export type Read{{pascalCase name}}Params = z.infer<typeof read{{pascalCase name}}ParamsSchema>

// Update
export const update{{pascalCase name}}ParamsSchema = z.object({})
export type Update{{pascalCase name}}Params = z.infer<typeof update{{pascalCase name}}ParamsSchema>

export const update{{pascalCase name}}ReturnValueSchema = z.object({})
export type Update{{pascalCase name}}ReturnValue = z.infer<typeof update{{pascalCase name}}ReturnValueSchema>

export const bulkUpdate{{pascalCase name}}ParamsSchema = z.array(update{{pascalCase name}}ParamsSchema)
export type BulkUpdate{{pascalCase name}}Params = z.infer<typeof bulkUpdate{{pascalCase name}}ParamsSchema>

export const bulkUpdate{{pascalCase name}}ReturnValueSchema = z.array(update{{pascalCase name}}ReturnValueSchema)
export type BulkUpdate{{pascalCase name}}ReturnValue = z.infer<typeof bulkUpdate{{pascalCase name}}ReturnValueSchema>

// Delete
export const delete{{pascalCase name}}ParamsSchema = z.object({})
export type Delete{{pascalCase name}}Params = z.infer<typeof delete{{pascalCase name}}ParamsSchema>

export const delete{{pascalCase name}}ReturnValueSchema = z.object({})
export type Delete{{pascalCase name}}ReturnValue = z.infer<typeof delete{{pascalCase name}}ReturnValueSchema>

export const bulkDelete{{pascalCase name}}ParamsSchema = z.object({})
export type BulkDelete{{pascalCase name}}Params = z.infer<typeof bulkDelete{{pascalCase name}}ParamsSchema>

export const bulkDelete{{pascalCase name}}ReturnValueSchema = z.object({})
export type BulkDelete{{pascalCase name}}ReturnValue = z.infer<typeof bulkDelete{{pascalCase name}}ReturnValueSchema>