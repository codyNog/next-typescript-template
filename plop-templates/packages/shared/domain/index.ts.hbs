import type {
    Create{{pascalCase name}}Params,
    Create{{pascalCase name}}ReturnValue,
    Read{{pascalCase name}}sParams,
    Read{{pascalCase name}}Params,
    BulkCreate{{pascalCase name}}Params,
    BulkCreate{{pascalCase name}}ReturnValue,
    BulkUpdate{{pascalCase name}}Params,
    BulkUpdate{{pascalCase name}}ReturnValue,
    BulkDelete{{pascalCase name}}Params,
    BulkDelete{{pascalCase name}}ReturnValue,
    Update{{pascalCase name}}Params,
    Update{{pascalCase name}}ReturnValue,
    Delete{{pascalCase name}}Params,
    Delete{{pascalCase name}}ReturnValue
} from './types';
import { read{{pascalCase name}}sParamsToQuery } from './modules';
import { {{camelCase name}}Mock } from './mock';

export const create{{pascalCase name}} = async (_params: Create{{pascalCase name}}Params): Promise<Create{{pascalCase name}}ReturnValue> => {
    return {{camelCase name}}Mock.createReturnValue;
};

export const bulkCreate{{pascalCase name}} = async (_params: BulkCreate{{pascalCase name}}Params): Promise<BulkCreate{{pascalCase name}}ReturnValue> => {
    return {{camelCase name}}Mock.bulkCreateReturnValue;
};

export const read{{pascalCase name}}s = async (params: Read{{pascalCase name}}sParams ) => {
    const _query = read{{pascalCase name}}sParamsToQuery(params);
    return [];
};

export const read{{pascalCase name}} = async (_params: Read{{pascalCase name}}Params ) => {
    return {};
};

export const update{{pascalCase name}} = async (_params: Update{{pascalCase name}}Params): Promise<Update{{pascalCase name}}ReturnValue> => {
    return {{camelCase name}}Mock.updateReturnValue;
};

export const bulkUpdate{{pascalCase name}} = async (_params: BulkUpdate{{pascalCase name}}Params): Promise<BulkUpdate{{pascalCase name}}ReturnValue> => {
    return {{camelCase name}}Mock.bulkUpdateReturnValue;
};

export const delete{{pascalCase name}} = async (_params: Delete{{pascalCase name}}Params): Promise<Delete{{pascalCase name}}ReturnValue> => {
    return {{camelCase name}}Mock.deleteReturnValue;
};

export const bulkDelete{{pascalCase name}} = async (_params: BulkDelete{{pascalCase name}}Params): Promise<BulkDelete{{pascalCase name}}ReturnValue> => {
    return {{camelCase name}}Mock.bulkDeleteReturnValue;
};
